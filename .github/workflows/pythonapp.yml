# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unittest

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip > /dev/null
        pip install -r requirements.txt > /dev/null
    - name: Lint with flake8
      run: |
        pip install flake8 > /dev/null
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        cd dashboard
        ./get_wait-for-it.sh > /dev/null
        chmod 777 wait-for-it.sh
        cd ..
        docker-compose -f test.yml build --quiet postgres django  2>&1 > /dev/null
        docker-compose -f test.yml up -d postgres  2>&1 > /dev/null
        docker-compose -f test.yml run --rm django bash -c "python3 manage.py makemigrations"
        docker-compose -f test.yml run --rm django bash -c "python3 manage.py migrate"
        docker-compose -f test.yml run --rm django bash -c "coverage run -m pytest"
        docker-compose -f test.yml run --rm django bash -c "coverage report"
